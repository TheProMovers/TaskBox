// 백엔드 서비스 롤백을 위한 Jenkins 파이프라인
pipeline {
    // 모든 Jenkins 에이전트에서 실행 가능
    agent any
    
    // 파이프라인 실행 시 사용자 입력 파라미터
    parameters {
        choice(name: 'DEPLOY_ENV', choices: ['dev', 'staging', 'prod'], description: '롤백할 환경 선택')
        choice(name: 'SERVICE_NAME', 
            choices: ['todo-service', 'board-service', 'file-service'], 
            description: '롤백할 서비스 선택')
        string(name: 'REVISION', 
            defaultValue: '', 
            description: '롤백할 리비전 번호 (비워두면 바로 이전 버전으로 롤백)')
    }
    
    // 환경 변수 설정
    environment {
        K8S_CONFIG = 'k8s-config'  // 쿠버네티스 설정 크리덴셜 ID
        NAMESPACE = "${params.DEPLOY_ENV}"  // 쿠버네티스 네임스페이스
    }
    
    // 파이프라인 단계
    stages {
        // 현재 배포 히스토리 조회
        stage('Get Deployment History') {
            steps {
                withKubeConfig([credentialsId: K8S_CONFIG]) {
                    sh """
                        echo "현재 배포 히스토리:"
                        kubectl rollout history deployment/${params.SERVICE_NAME} -n ${NAMESPACE}
                    """
                }
            }
        }
        
        // 롤백 실행
        stage('Rollback') {
            steps {
                withKubeConfig([credentialsId: K8S_CONFIG]) {
                    script {
                        try {
                            // 특정 리비전으로 롤백 또는 바로 이전 버전으로 롤백
                            if (params.REVISION?.trim()) {
                                sh """
                                    kubectl rollout undo deployment/${params.SERVICE_NAME} \
                                    -n ${NAMESPACE} --to-revision=${params.REVISION}
                                """
                            } else {
                                sh """
                                    kubectl rollout undo deployment/${params.SERVICE_NAME} -n ${NAMESPACE}
                                """
                            }
                            
                            // 롤백 상태 확인
                            sh """
                                kubectl rollout status deployment/${params.SERVICE_NAME} \
                                -n ${NAMESPACE} --timeout=300s
                            """
                        } catch (Exception e) {
                            error "롤백 실패: ${e.message}"
                        }
                    }
                }
            }
        }
        
        // 롤백 결과 확인
        stage('Verify Rollback') {
            steps {
                withKubeConfig([credentialsId: K8S_CONFIG]) {
                    sh """
                        echo "현재 배포 상태:"
                        kubectl get deployment ${params.SERVICE_NAME} -n ${NAMESPACE} -o wide
                        
                        echo "\\n파드 상태:"
                        kubectl get pods -n ${NAMESPACE} -l app=${params.SERVICE_NAME}
                    """
                }
            }
        }
    }
    
    // 파이프라인 완료 후 처리
    post {
        // 성공 시 슬랙 알림
        success {
            slackSend(color: 'good', 
                message: "롤백 성공: ${params.SERVICE_NAME} (${params.DEPLOY_ENV}) - ${params.REVISION ?: '이전 버전'}")
        }
        // 실패 시 슬랙 알림
        failure {
            slackSend(color: 'danger', 
                message: "롤백 실패: ${params.SERVICE_NAME} (${params.DEPLOY_ENV}) - ${params.REVISION ?: '이전 버전'}")
        }
    }
} 